{"version":3,"file":"quickjs.test.js","sourceRoot":"","sources":["../ts/quickjs.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * These tests demonstrate some common patterns for using quickjs-emscripten.\n */\n\nimport {\n  getQuickJS,\n  QuickJSHandle,\n  InterruptHandler,\n  QuickJSDeferredPromise,\n  newQuickJSAsyncWASMModule,\n  newQuickJSWASMModule,\n} from \".\"\nimport { it, describe } from \"mocha\"\nimport assert from \"assert\"\nimport { isFail, VmCallResult } from \"./vm-interface\"\nimport fs from \"fs\"\nimport { QuickJSContext } from \"./context\"\nimport { QuickJSAsyncContext } from \"./context-asyncify\"\nimport { DEBUG_ASYNC, DEBUG_SYNC, memoizePromiseFactory, QuickJSFFI } from \"./variants\"\nimport { QuickJSUnwrapError } from \"./errors\"\nimport { debugLog } from \"./debug\"\nimport { EitherFFI } from \"./types\"\n\nconst TEST_NO_ASYNC = Boolean(process.env.TEST_NO_ASYNC)\n\nfunction contextTests(getContext: () => Promise<QuickJSContext>) {\n  let vm: QuickJSContext = undefined as any\n  let ffi: EitherFFI = undefined as any\n  let testId = 0\n\n  beforeEach(async () => {\n    testId++\n    vm = await getContext()\n    ffi = (vm as any).ffi\n    assertBuildIsConsistent(vm)\n  })\n\n  afterEach(() => {\n    vm.dispose()\n    vm = undefined as any\n  })\n\n  after(() => {\n    if (ffi.QTS_BuildIsAsyncify()) {\n      // Asyncify explodes during leak checking.\n      return\n    }\n    // https://web.dev/webassembly-memory-debugging/\n    assert.strictEqual(ffi.QTS_RecoverableLeakCheck(), 0, \"No lsan errors\")\n    console.log(\"Leaks checked (OK)\")\n  })\n\n  const getTestId = () => `test-${getContext.name}-${testId}`\n\n  describe(\"primitives\", () => {\n    it(\"can round-trip a number\", () => {\n      const jsNumber = 42\n      const numHandle = vm.newNumber(jsNumber)\n      assert.equal(vm.getNumber(numHandle), jsNumber)\n      numHandle.dispose()\n    })\n\n    it(\"can round-trip a string\", () => {\n      const jsString = \"an example 🤔 string with unicode 🎉\"\n      const stringHandle = vm.newString(jsString)\n      assert.equal(vm.getString(stringHandle), jsString)\n      stringHandle.dispose()\n    })\n\n    it(\"can round-trip undefined\", () => {\n      assert.strictEqual(vm.dump(vm.undefined), undefined)\n    })\n\n    it(\"can round-trip true\", () => {\n      assert.strictEqual(vm.dump(vm.true), true)\n    })\n\n    it(\"can round-trip false\", () => {\n      assert.strictEqual(vm.dump(vm.false), false)\n    })\n\n    it(\"can round-trip null\", () => {\n      assert.strictEqual(vm.dump(vm.null), null)\n    })\n  })\n\n  describe(\"functions\", () => {\n    it(\"can wrap a Javascript function and call it\", () => {\n      const some = 9\n      const fnHandle = vm.newFunction(\"addSome\", (num) => {\n        return vm.newNumber(some + vm.getNumber(num))\n      })\n      const result = vm.newNumber(1).consume((num) => vm.callFunction(fnHandle, vm.undefined, num))\n      if (result.error) {\n        result.error.dispose()\n        assert.fail(\"calling fnHandle must succeed\")\n      }\n      assert.equal(vm.getNumber(result.value), 10)\n      result.value.dispose()\n      fnHandle.dispose()\n    })\n\n    it(\"passes through native exceptions\", () => {\n      const fnHandle = vm.newFunction(\"jsOops\", () => {\n        throw new Error(\"oops\")\n      })\n\n      const result = vm.callFunction(fnHandle, vm.undefined)\n      if (!result.error) {\n        assert.fail(\"function call must return error\")\n      }\n      assert.deepEqual(vm.dump(result.error), {\n        name: \"Error\",\n        message: \"oops\",\n      })\n      result.error.dispose()\n      fnHandle.dispose()\n    })\n\n    it(\"can return undefined twice\", () => {\n      const fnHandle = vm.newFunction(\"returnUndef\", () => {\n        return vm.undefined\n      })\n\n      vm.unwrapResult(vm.callFunction(fnHandle, vm.undefined)).dispose()\n      const result = vm.unwrapResult(vm.callFunction(fnHandle, vm.undefined))\n\n      assert.equal(vm.typeof(result), \"undefined\")\n      result.dispose()\n      fnHandle.dispose()\n    })\n\n    it(\"can see its arguments being cloned\", () => {\n      let value: QuickJSHandle | undefined\n\n      const fnHandle = vm.newFunction(\"doSomething\", (arg) => {\n        value = arg.dup()\n      })\n\n      const argHandle = vm.newString(\"something\")\n      const callHandle = vm.callFunction(fnHandle, vm.undefined, argHandle)\n\n      argHandle.dispose()\n      vm.unwrapResult(callHandle).dispose()\n\n      if (!value) throw new Error(`Value unset`)\n\n      assert.equal(vm.getString(value), \"something\")\n      value.dispose()\n\n      fnHandle.dispose()\n    })\n  })\n\n  describe(\"properties\", () => {\n    it(\"defining a property does not leak\", () => {\n      vm.defineProp(vm.global, \"Name\", {\n        enumerable: false,\n        configurable: false,\n        get: () => vm.newString(\"World\"),\n      })\n      const result = vm.unwrapResult(vm.evalCode('\"Hello \" + Name'))\n      assert.equal(vm.dump(result), \"Hello World\")\n      result.dispose()\n    })\n  })\n\n  describe(\"objects\", () => {\n    it(\"can set and get properties by native string\", () => {\n      const object = vm.newObject()\n      const value = vm.newNumber(42)\n      vm.setProp(object, \"propName\", value)\n\n      const value2 = vm.getProp(object, \"propName\")\n      assert.equal(vm.getNumber(value2), 42)\n\n      object.dispose()\n      value.dispose()\n      value2.dispose()\n    })\n\n    it(\"can set and get properties by handle string\", () => {\n      const object = vm.newObject()\n      const key = vm.newString(\"prop as a QuickJS string\")\n      const value = vm.newNumber(42)\n      vm.setProp(object, key, value)\n\n      const value2 = vm.getProp(object, key)\n      assert.equal(vm.getNumber(value2), 42)\n\n      object.dispose()\n      key.dispose()\n      value.dispose()\n      value2.dispose()\n    })\n\n    it(\"can create objects with a prototype\", () => {\n      const defaultGreeting = vm.newString(\"SUP DAWG\")\n      const greeterPrototype = vm.newObject()\n      vm.setProp(greeterPrototype, \"greeting\", defaultGreeting)\n      defaultGreeting.dispose()\n      const greeter = vm.newObject(greeterPrototype)\n\n      // Gets something from the prototype\n      const getGreeting = vm.getProp(greeter, \"greeting\")\n      assert.equal(vm.getString(getGreeting), \"SUP DAWG\")\n      getGreeting.dispose()\n\n      // But setting a property from the prototype does not modify the prototype\n      const newGreeting = vm.newString(\"How do you do?\")\n      vm.setProp(greeter, \"greeting\", newGreeting)\n      newGreeting.dispose()\n\n      const originalGreeting = vm.getProp(greeterPrototype, \"greeting\")\n      assert.equal(vm.getString(originalGreeting), \"SUP DAWG\")\n      originalGreeting.dispose()\n\n      greeterPrototype.dispose()\n      greeter.dispose()\n    })\n  })\n\n  describe(\"arrays\", () => {\n    it(\"can set and get entries by native number\", () => {\n      const array = vm.newArray()\n      const val1 = vm.newNumber(101)\n      vm.setProp(array, 0, val1)\n\n      const val2 = vm.getProp(array, 0)\n      assert.strictEqual(vm.getNumber(val2), 101)\n\n      array.dispose()\n      val1.dispose()\n      val2.dispose()\n    })\n\n    it(\"adding items sets array.length\", () => {\n      const vals = [vm.newNumber(0), vm.newNumber(1), vm.newString(\"cow\")]\n      const array = vm.newArray()\n      for (let i = 0; i < vals.length; i++) {\n        vm.setProp(array, i, vals[i])\n      }\n\n      const length = vm.getProp(array, \"length\")\n      assert.strictEqual(vm.getNumber(length), 3)\n\n      length.dispose()\n      array.dispose()\n      vals.forEach((val) => val.dispose())\n    })\n  })\n\n  describe(\".unwrapResult\", () => {\n    it(\"successful result: returns the value\", () => {\n      const handle = vm.newString(\"OK!\")\n      const result: VmCallResult<QuickJSHandle> = {\n        value: handle,\n      }\n\n      assert.strictEqual(vm.unwrapResult(result), handle)\n      handle.dispose()\n    })\n\n    it(\"error result: throws the error as a Javascript value\", () => {\n      const handle = vm.newString(\"ERROR!\")\n      const result: VmCallResult<QuickJSHandle> = {\n        error: handle,\n      }\n\n      try {\n        vm.unwrapResult(result)\n        assert.fail(\"vm.unwrapResult(error) must throw\")\n      } catch (error) {\n        if (error instanceof QuickJSUnwrapError) {\n          assert.strictEqual(error.cause, \"ERROR!\", \"QuickJSUnwrapError.cause set correctly\")\n          return\n        }\n        throw error\n      } finally {\n        if (handle.alive) {\n          handle.dispose()\n        }\n      }\n    })\n  })\n\n  describe(\".evalCode\", () => {\n    it(\"on success: returns { value: success }\", () => {\n      const value = vm.unwrapResult(vm.evalCode(`[\"this\", \"should\", \"work\"].join(' ')`))\n      assert.equal(vm.getString(value), \"this should work\")\n      value.dispose()\n    })\n\n    it(\"on failure: returns { error: exception }\", () => {\n      const result = vm.evalCode(`[\"this\", \"should\", \"fail].join(' ')`)\n      if (!result.error) {\n        assert.fail(\"result should be an error\")\n      }\n      assert.deepEqual(vm.dump(result.error), {\n        name: \"SyntaxError\",\n        message: \"unexpected end of string\",\n        stack: \"    at eval.js:1\\n\",\n      })\n      result.error.dispose()\n    })\n\n    it(\"runs in the global context\", () => {\n      vm.unwrapResult(vm.evalCode(`var declaredWithEval = 'Nice!'`)).dispose()\n      const declaredWithEval = vm.getProp(vm.global, \"declaredWithEval\")\n      assert.equal(vm.getString(declaredWithEval), \"Nice!\")\n      declaredWithEval.dispose()\n    })\n\n    it(\"can access assigned globals\", () => {\n      let i = 0\n      const fnHandle = vm.newFunction(\"nextId\", () => {\n        return vm.newNumber(++i)\n      })\n      vm.setProp(vm.global, \"nextId\", fnHandle)\n      fnHandle.dispose()\n\n      const nextId = vm.unwrapResult(vm.evalCode(`nextId(); nextId(); nextId()`))\n      assert.equal(i, 3)\n      assert.equal(vm.getNumber(nextId), 3)\n      nextId.dispose()\n    })\n\n    // TODO: bring back import support.\n    it(\"can handle imports\", () => {\n      let moduleLoaderCalls = 0\n      vm.runtime.setModuleLoader(() => {\n        moduleLoaderCalls++\n        return `export const name = \"from import\";`\n      })\n      vm.unwrapResult(\n        vm.evalCode(\n          `\n          import {name} from './foo.js'\n          globalThis.declaredWithEval = name\n          `,\n          \"importer.js\"\n        )\n      ).dispose()\n      const declaredWithEval = vm.getProp(vm.global, \"declaredWithEval\")\n      assert.equal(vm.getString(declaredWithEval), \"from import\")\n      declaredWithEval.dispose()\n\n      assert.equal(moduleLoaderCalls, 1, \"Only called once\")\n    })\n\n    it(\"respects maxStackSize\", async () => {\n      try {\n        ;(await getQuickJS()).evalCode('\"ok\"', { maxStackSizeBytes: 1 })\n      } catch (e) {\n        return\n      }\n    })\n  })\n\n  describe(\".executePendingJobs\", () => {\n    it(\"runs pending jobs\", () => {\n      let i = 0\n      const fnHandle = vm.newFunction(\"nextId\", () => {\n        return vm.newNumber(++i)\n      })\n      vm.setProp(vm.global, \"nextId\", fnHandle)\n      fnHandle.dispose()\n\n      const result = vm.unwrapResult(\n        vm.evalCode(`(new Promise(resolve => resolve())).then(nextId).then(nextId).then(nextId);1`)\n      )\n      assert.equal(i, 0)\n      vm.runtime.executePendingJobs()\n      assert.equal(i, 3)\n      assert.equal(vm.getNumber(result), 1)\n      result.dispose()\n    })\n  })\n\n  describe(\".hasPendingJob\", () => {\n    it(\"returns true when job pending\", () => {\n      let i = 0\n      const fnHandle = vm.newFunction(\"nextId\", () => {\n        return vm.newNumber(++i)\n      })\n      vm.setProp(vm.global, \"nextId\", fnHandle)\n      fnHandle.dispose()\n\n      vm.unwrapResult(vm.evalCode(`(new Promise(resolve => resolve(5)).then(nextId));1`)).dispose()\n      assert.strictEqual(\n        vm.runtime.hasPendingJob(),\n        true,\n        \"has a pending job after creating a promise\"\n      )\n\n      const executed = vm.unwrapResult(vm.runtime.executePendingJobs())\n      assert.strictEqual(executed, 1, \"executed exactly 1 job\")\n\n      assert.strictEqual(vm.runtime.hasPendingJob(), false, \"no longer any jobs after execution\")\n    })\n  })\n\n  describe(\".dump\", () => {\n    function dumpTestExample(val: unknown) {\n      const json = typeof val === \"undefined\" ? \"undefined\" : JSON.stringify(val)\n      const nativeType = typeof val\n      it(`supports ${nativeType} (${json})`, () => {\n        const handle = vm.unwrapResult(vm.evalCode(`(${json})`))\n        assert.deepEqual(vm.dump(handle), val)\n        handle.dispose()\n      })\n    }\n    dumpTestExample(1)\n    dumpTestExample(\"hi\")\n    dumpTestExample(true)\n    dumpTestExample(false)\n    dumpTestExample(undefined)\n    dumpTestExample(null)\n    dumpTestExample({ cow: true })\n    dumpTestExample([1, 2, 3])\n  })\n\n  describe(\".typeof\", () => {\n    function typeofTestExample(val: unknown, toCode = JSON.stringify) {\n      const json = toCode(val)\n      const nativeType = typeof val\n      it(`supports ${nativeType} (${json})`, () => {\n        const handle = vm.unwrapResult(vm.evalCode(`(${json})`))\n        assert.equal(vm.typeof(handle), nativeType)\n        handle.dispose()\n      })\n    }\n\n    typeofTestExample(1)\n    typeofTestExample(\"hi\")\n    typeofTestExample(true)\n    typeofTestExample(false)\n    typeofTestExample(undefined)\n    typeofTestExample(null)\n    typeofTestExample({ cow: true })\n    typeofTestExample([1, 2, 3])\n    typeofTestExample(\n      function () {},\n      (val: any) => val.toString()\n    )\n  })\n\n  describe(\"interrupt handler\", () => {\n    it(\"is called with the expected VM\", () => {\n      let calls = 0\n      const interruptId = getTestId()\n      const interruptHandler: InterruptHandler = (interruptVm) => {\n        assert.strictEqual(\n          interruptVm,\n          vm.runtime,\n          \"ShouldInterruptHandler callback runtime is the runtime\"\n        )\n        debugLog(\"interruptHandler called\", interruptId)\n        calls++\n        return false\n      }\n\n      debugLog(\"setInterruptHandler\", interruptId)\n      vm.runtime.setInterruptHandler(interruptHandler)\n\n      vm.unwrapResult(vm.evalCode(\"1 + 1\")).dispose()\n\n      assert(calls > 0, \"interruptHandler called at least once\")\n    })\n\n    it(\"interrupts infinite loop execution\", () => {\n      let calls = 0\n      const interruptId = getTestId()\n      const interruptHandler: InterruptHandler = (interruptVm) => {\n        debugLog(\"interruptHandler called\", interruptId)\n        if (calls > 10) {\n          return true\n        }\n        calls++\n        return false\n      }\n\n      debugLog(\"setInterruptHandler\", interruptId)\n      vm.runtime.setInterruptHandler(interruptHandler)\n\n      const result = vm.evalCode(\"i = 0; while (1) { i++ }\")\n\n      // Make sure we actually got to interrupt the loop.\n      const iHandle = vm.getProp(vm.global, \"i\")\n      const i = vm.getNumber(iHandle)\n      iHandle.dispose()\n\n      assert(i > 10, \"incremented i\")\n      assert(i > calls, \"incremented i more than called the interrupt handler\")\n      // debug('Javascript loop iterrations:', i, 'interrupt handler calls:', calls)\n\n      if (result.error) {\n        const errorJson = vm.dump(result.error)\n        result.error.dispose()\n        assert.equal(errorJson.name, \"InternalError\")\n        assert.equal(errorJson.message, \"interrupted\")\n      } else {\n        result.value.dispose()\n        assert.fail(\"Should have returned an interrupt error\")\n      }\n    })\n  })\n\n  describe(\".computeMemoryUsage\", () => {\n    it(\"returns an object with JSON memory usage info\", () => {\n      const result = vm.runtime.computeMemoryUsage()\n      const resultObj = vm.dump(result)\n      result.dispose()\n\n      const example = {\n        array_count: 1,\n        atom_count: 414,\n        atom_size: 13593,\n        binary_object_count: 0,\n        binary_object_size: 0,\n        c_func_count: 46,\n        fast_array_count: 1,\n        fast_array_elements: 0,\n        js_func_code_size: 0,\n        js_func_count: 0,\n        js_func_pc2line_count: 0,\n        js_func_pc2line_size: 0,\n        js_func_size: 0,\n        malloc_count: 665,\n        malloc_limit: 4294967295,\n        memory_used_count: 665,\n        memory_used_size: 36305,\n        obj_count: 97,\n        obj_size: 4656,\n        prop_count: 654,\n        prop_size: 5936,\n        shape_count: 50,\n        shape_size: 10328,\n        str_count: 0,\n        str_size: 0,\n      }\n\n      assert.deepEqual(Object.keys(resultObj).sort(), Object.keys(example).sort())\n    })\n  })\n\n  describe(\".setMemoryLimit\", () => {\n    it(\"sets an enforced limit\", () => {\n      vm.runtime.setMemoryLimit(100)\n      const result = vm.evalCode(`new Uint8Array(101); \"ok\"`)\n\n      if (!result.error) {\n        result.value.dispose()\n        throw new Error(\"should be an error\")\n      }\n\n      vm.runtime.setMemoryLimit(-1) // so we can dump\n      const error = vm.dump(result.error)\n      result.error.dispose()\n\n      assert.strictEqual(error, null)\n    })\n\n    it(\"removes limit when set to -1\", () => {\n      vm.runtime.setMemoryLimit(100)\n      vm.runtime.setMemoryLimit(-1)\n\n      const result = vm.unwrapResult(vm.evalCode(`new Uint8Array(101); \"ok\"`))\n      const value = vm.dump(result)\n      result.dispose()\n      assert.strictEqual(value, \"ok\")\n    })\n  })\n\n  describe(\".dumpMemoryUsage()\", () => {\n    it(\"logs memory usage\", () => {\n      assert(\n        vm.runtime.dumpMemoryUsage().endsWith(\"per fast array)\\n\"),\n        'should end with \"per fast array)\\\\n\"'\n      )\n    })\n  })\n\n  describe(\".setMaxStackSize\", () => {\n    it(\"sets an enforced limit\", () => {\n      vm.runtime.setMaxStackSize(1)\n      const result = vm.evalCode('\"ok\"')\n\n      if (!result.error) {\n        result.value.dispose()\n        throw new Error(\"should be an error\")\n      }\n\n      vm.runtime.setMaxStackSize(0) // so we can dump\n      const error = vm.dump(result.error)\n      result.error.dispose()\n      assert.strictEqual(error.name, \"SyntaxError\")\n      assert.strictEqual(error.message, \"stack overflow\")\n    })\n\n    it(\"removes limit when set to 0\", () => {\n      vm.runtime.setMaxStackSize(1)\n      vm.runtime.setMaxStackSize(0)\n      const result = vm.unwrapResult(vm.evalCode('\"ok\"'))\n      const value = vm.dump(result)\n      result.dispose()\n      assert.strictEqual(value, \"ok\")\n    })\n  })\n\n  describe(\"sharing objects between contexts\", () => {\n    it(\"can share objects between same runtime\", () => {\n      const otherContext = vm.runtime.newContext()\n\n      const object = vm.newObject()\n      vm.newString(\"bar\").consume((it) => vm.setProp(object, \"foo\", it))\n      otherContext.setProp(otherContext.global, \"myObject\", object)\n      object.dispose()\n\n      const value = vm.unwrapResult(otherContext.evalCode(`myObject`)).consume(otherContext.dump)\n      assert.deepStrictEqual(value, { foo: \"bar\" }, \"ok\")\n      otherContext.dispose()\n    })\n  })\n\n  describe(\".newPromise()\", () => {\n    it(\"dispose does not leak\", () => {\n      vm.newPromise().dispose()\n    })\n\n    it(\"passes an end-to-end test\", async () => {\n      const expectedValue = Math.random()\n      let deferred: QuickJSDeferredPromise = undefined as any\n\n      function timeout(ms: number) {\n        return new Promise<void>((resolve) => {\n          setTimeout(() => resolve(), ms)\n        })\n      }\n\n      const asyncFuncHandle = vm.newFunction(\"getThingy\", () => {\n        deferred = vm.newPromise()\n        timeout(5).then(() => vm.newNumber(expectedValue).consume((val) => deferred.resolve(val)))\n        return deferred.handle\n      })\n\n      asyncFuncHandle.consume((func) => vm.setProp(vm.global, \"getThingy\", func))\n\n      vm.unwrapResult(\n        vm.evalCode(`\n          var globalThingy = 'not set by promise';\n          getThingy().then(thingy => { globalThingy = thingy })\n        `)\n      ).dispose()\n\n      // Wait for the promise to settle\n      await deferred.settled\n\n      // Execute promise callbacks inside the VM\n      vm.runtime.executePendingJobs()\n\n      // Check that the promise executed.\n      const vmValue = vm.unwrapResult(vm.evalCode(`globalThingy`)).consume((x) => vm.dump(x))\n      assert.equal(vmValue, expectedValue)\n    })\n  })\n\n  describe(\".resolvePromise()\", () => {\n    it(\"retrieves async function return value as a successful VM result\", async () => {\n      const result = vm.unwrapResult(\n        vm.evalCode(`\n        async function return1() {\n          return 1\n        }\n\n        return1()\n        `)\n      )\n\n      assert.equal(vm.typeof(result), \"object\", \"Async function returns an object (promise)\")\n\n      const promise = result.consume((result) => vm.resolvePromise(result))\n      vm.runtime.executePendingJobs()\n      const asyncResult = vm.unwrapResult(await promise)\n\n      assert.equal(vm.dump(asyncResult), 1, \"Awaited promise returns 1\")\n\n      asyncResult.dispose()\n    })\n\n    it(\"retrieves async function error as a error VM result\", async () => {\n      const result = vm.unwrapResult(\n        vm.evalCode(`\n        async function throwOops() {\n          throw new Error('oops')\n        }\n\n        throwOops()\n        `)\n      )\n\n      assert.equal(vm.typeof(result), \"object\", \"Async function returns an object (promise)\")\n\n      const promise = result.consume((result) => vm.resolvePromise(result))\n      vm.runtime.executePendingJobs()\n      const asyncResult = await promise\n\n      if (!asyncResult.error) {\n        throw new Error(\"Should have returned an error\")\n      }\n      const error = vm.dump(asyncResult.error)\n      asyncResult.error.dispose()\n\n      assert.equal(error.name, \"Error\")\n      assert.equal(error.message, \"oops\")\n    })\n\n    it(\"converts non-promise handles into a promise, too\", async () => {\n      const stringHandle = vm.newString(\"foo\")\n      const promise = vm.resolvePromise(stringHandle)\n      stringHandle.dispose()\n\n      vm.runtime.executePendingJobs()\n\n      const final = await promise.then((result) => {\n        const stringHandle2 = vm.unwrapResult(result)\n        return `unwrapped: ${stringHandle2.consume((stringHandle2) => vm.dump(stringHandle2))}`\n      })\n      assert.equal(final, `unwrapped: foo`)\n    })\n  })\n\n  describe(\"memory pressure\", () => {\n    it(\"can pass a large string to a C function\", async () => {\n      const jsonString = await fs.promises.readFile(\n        `${__dirname}/../test/json-generator-dot-com-1024-rows.json`,\n        \"utf-8\"\n      )\n      const stringHandle = vm.newString(jsonString)\n      const roundTripped = vm.getString(stringHandle)\n      stringHandle.dispose()\n\n      assert.strictEqual(roundTripped, jsonString)\n    })\n  })\n}\n\nfunction asyncContextTests(getContext: () => Promise<QuickJSAsyncContext>) {\n  let vm: QuickJSAsyncContext = undefined as any\n\n  beforeEach(async () => {\n    vm = await getContext()\n    assertBuildIsConsistent(vm)\n  })\n\n  afterEach(() => {\n    vm.dispose()\n    vm = undefined as any\n  })\n\n  describe(\"asyncify functions\", () => {\n    it(\"sees Promise<handle> as synchronous\", async () => {\n      let asyncFunctionCalls = 0\n      const asyncFn = async () => {\n        asyncFunctionCalls++\n        await new Promise((resolve) => setTimeout(resolve, 50))\n        return vm.newString(\"hello from async\")\n      }\n      const fnHandle = vm.newAsyncifiedFunction(\"asyncFn\", asyncFn)\n      vm.setProp(vm.global, \"asyncFn\", fnHandle)\n      fnHandle.dispose()\n\n      const callResultPromise = vm.evalCodeAsync(\"asyncFn()\")\n      assert(callResultPromise instanceof Promise)\n\n      const callResult = await callResultPromise\n      const unwrapped = vm.unwrapResult(callResult)\n\n      const dumped = unwrapped.consume(vm.dump)\n      assert.equal(dumped, \"hello from async\")\n\n      assert.equal(asyncFunctionCalls, 1, \"one call\")\n    })\n\n    it(\"passes through native promise rejection\", async () => {\n      const asyncFn = async () => {\n        await new Promise((resolve) => setTimeout(resolve, 50))\n        throw new Error(\"async oops\")\n      }\n\n      vm.newAsyncifiedFunction(\"asyncFn\", asyncFn).consume((fn) =>\n        vm.setProp(vm.global, \"asyncFn\", fn)\n      )\n\n      const callResultPromise = vm.evalCodeAsync(\"asyncFn()\")\n      assert(callResultPromise instanceof Promise)\n\n      const result = await callResultPromise\n      assert(isFail(result), \"VM eval call errored\")\n\n      assert.throws(() => vm.unwrapResult(result), /async oops/)\n    })\n  })\n\n  describe(\"module loading\", () => {\n    it(\"supports async module loading\", async () => {\n      async function testBody() {\n        let moduleLoaderCalls = 0\n        const moduleLoader = async () => {\n          moduleLoaderCalls++\n          if (moduleLoaderCalls > 1) {\n            throw new Error(\"Module loader should only be called once\")\n          }\n          debugLog(\"moduleLoader: sleeping\")\n          await new Promise((resolve) => setTimeout(resolve, 50))\n          debugLog(\"moduleLoader: done sleeping\")\n          return 'export default function() { return \"hello from module\" }'\n        }\n        debugLog(\"defined module loader\")\n\n        vm.runtime.setModuleLoader(moduleLoader)\n        debugLog(\"set module loader\")\n\n        const promise = vm.evalCodeAsync(`\n        import otherModule from './other-module'\n        globalThis.stuff = otherModule()\n      `)\n        debugLog(\"promise\", promise)\n\n        const result = await promise\n        debugLog(\"awaited vm.evalCodeAsync\", result, { alive: vm.alive })\n\n        const unwrapped = vm.unwrapResult(result)\n        debugLog(\"unwrapped result\")\n\n        const dumped = unwrapped.consume(vm.dump)\n        debugLog(\"consumed result\")\n\n        assert.strictEqual(dumped, undefined)\n        debugLog(\"asserted result\")\n\n        const stuff = vm.getProp(vm.global, \"stuff\").consume(vm.dump)\n        assert.strictEqual(stuff, \"hello from module\")\n      }\n\n      try {\n        await testBody()\n      } catch (error) {\n        debugLog(\"test body threw\", error)\n        throw error\n      }\n    })\n\n    it(\"passes through the module name\", () => {\n      let callCtx: QuickJSAsyncContext\n      let callModuleName: string\n      vm.runtime.setModuleLoader((moduleName, moduleVM) => {\n        callCtx = moduleVM\n        callModuleName = moduleName\n        return `export default 5`\n      })\n\n      const result = vm.evalCode(\"import otherModule from './other-module.js'\")\n\n      // Asserts that the eval worked without incident\n      const unwrapped = vm.unwrapResult(result).consume(vm.dump)\n      assert.strictEqual(unwrapped, undefined)\n\n      assert.strictEqual(callCtx!, vm, \"expected VM\")\n      assert.strictEqual(\n        callModuleName!,\n        \"other-module.js\",\n        `expected module name, got ${callModuleName!}`\n      )\n    })\n\n    it(\"calls the module loader with the name returned from the module normalizer\", async () => {\n      const EVAL_FILE_NAME = \"EVAL FILE NAME.ts\"\n      const NORMALIZED_NAME = \"VERY NORMAL NAME\"\n      const IMPORT_PATH = \"./other-module/index.js\"\n      let requestedBaseName: string | undefined\n      let requestedName: string | undefined\n      let loadedName: string | undefined\n\n      vm.runtime.setModuleLoader(\n        function load(moduleName: string) {\n          loadedName = moduleName\n          return `export default 5`\n        },\n        function normalize(baseName: string, name: string, moduleVM: QuickJSAsyncContext) {\n          requestedBaseName = baseName\n          requestedName = name\n          return NORMALIZED_NAME\n        }\n      )\n\n      // Asserts that the eval worked without incident\n      const result = vm.evalCode(`import otherModule from '${IMPORT_PATH}'`, EVAL_FILE_NAME)\n      const unwrapped = vm.unwrapResult(result).consume(vm.dump)\n      assert.strictEqual(unwrapped, undefined)\n\n      // Check our request\n      assert.strictEqual(requestedName, IMPORT_PATH, \"requested name is the literal import string\")\n      assert.strictEqual(requestedBaseName, EVAL_FILE_NAME, \"base name is our eval file name\")\n      assert.strictEqual(\n        loadedName,\n        NORMALIZED_NAME,\n        \"loader received the normalized name we returned\"\n      )\n    })\n  })\n}\n\ndescribe(\"QuickJSContext\", function () {\n  describe(\"QuickJS.newContext\", function () {\n    const loader = getQuickJS\n    const getContext = () => loader().then((mod) => mod.newContext())\n    contextTests.call(this, getContext)\n  })\n\n  describe(\"DEBUG sync module\", function () {\n    const loader = memoizePromiseFactory(() => newQuickJSWASMModule(DEBUG_SYNC))\n    const getContext = () => loader().then((mod) => mod.newContext())\n    contextTests.call(this, getContext)\n  })\n})\n\nif (!TEST_NO_ASYNC) {\n  describe(\"QuickJSAsyncContext\", () => {\n    describe(\"newQuickJSAsyncWASMModule\", function () {\n      const loader = memoizePromiseFactory(() => newQuickJSAsyncWASMModule())\n      const getContext = () => loader().then((mod) => mod.newContext())\n\n      describe(\"sync API\", () => {\n        contextTests(getContext)\n      })\n\n      describe(\"async API\", () => {\n        asyncContextTests(getContext)\n      })\n    })\n\n    describe(\"DEBUG async module\", function () {\n      const loader = memoizePromiseFactory(() => newQuickJSAsyncWASMModule(DEBUG_ASYNC))\n      const getContext = () => loader().then((mod) => mod.newContext())\n\n      describe(\"sync API\", () => {\n        contextTests(getContext)\n      })\n\n      describe(\"async API\", () => {\n        asyncContextTests(getContext)\n      })\n    })\n  })\n}\n\n// TODO: test newRuntime\n// TODO: test newAsyncRuntime\n\nfunction assertBuildIsConsistent(vm: QuickJSContext) {\n  const ffi: QuickJSFFI = (vm as any).ffi\n  if (ffi.DEBUG) {\n    assert.strictEqual(\n      ffi.QTS_BuildIsDebug(),\n      1,\n      \"when FFI is generated with DEBUG, C code is compiled with DEBUG\"\n    )\n  } else {\n    assert.strictEqual(\n      ffi.QTS_BuildIsDebug(),\n      0,\n      \"when FFI is generated without DEBUG, C code is compiled without DEBUG\"\n    )\n  }\n}\n"]}